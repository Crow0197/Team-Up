@model Team_Up.Models.TaskModel

@{
    ViewBag.Title = "Edit";
}

<h2>Modifica Task</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none;">
            @Html.LabelFor(model => model.TaskID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"  style="display:none;">
            @Html.LabelFor(model => model.isClosed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isClosed)
                    @Html.ValidationMessageFor(model => model.isClosed, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="form-group"  style="display:none;">
            @Html.LabelFor(model => model.DateInsert, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateInsert, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateInsert, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateClose, htmlAttributes: new { @class = "control-label col-md-2" })


            <div class="col-md-10">
                @{

                    if (Model.DateClose != null)
                    {





                        var dateClose = Model.DateClose.Value.ToString("yyyy-MM-dd").ToString();

                        if (dateClose != "0001-01-01")
                        {
                            <input type="date" name="DateClose" class="form-control" min=@DateTime.Now.ToString("yyyy-MM-dd") value=@dateClose } />


                        }
                        else
                        {

                            <input type="date" name="DateClose" class="form-control" min=@DateTime.Now.ToString("yyyy-MM-dd") } />

                        }
                    }

                    else
                    { <input type="date" name="DateClose" class="form-control" min=@DateTime.Now.ToString("yyyy-MM-dd") } /> }


                }




                @Html.ValidationMessageFor(model => model.DateClose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"  style="display:none;">
            @Html.LabelFor(model => model.Project, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"  style="display:none;">
            @Html.LabelFor(model => model.AccountCreator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountCreator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountCreator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salva" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
